// Mocks generated by Mockito 5.4.6 from annotations
// in codealpha_fitness_tracker_app/test/unit/dashboard_cubit_performance_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:codealpha_fitness_tracker_app/features/activity_log/data/models/activity_log_model.dart'
    as _i4;
import 'package:codealpha_fitness_tracker_app/features/activity_log/data/repos/activity_log_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ActivityLogRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityLogRepository extends _i1.Mock
    implements _i2.ActivityLogRepository {
  MockActivityLogRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> addActivity(_i4.ActivityLogModel? log) =>
      (super.noSuchMethod(
            Invocation.method(#addActivity, [log]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.ActivityLogModel>> getAllActivities() =>
      (super.noSuchMethod(
            Invocation.method(#getAllActivities, []),
            returnValue: _i3.Future<List<_i4.ActivityLogModel>>.value(
              <_i4.ActivityLogModel>[],
            ),
          )
          as _i3.Future<List<_i4.ActivityLogModel>>);

  @override
  _i3.Future<int> updateActivity(_i4.ActivityLogModel? log) =>
      (super.noSuchMethod(
            Invocation.method(#updateActivity, [log]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> deleteActivity(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteActivity, [id]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);
}
